#!/bin/bash

# –£–°–¢–ê–†–ï–õ: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ universal-install-update.sh
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞—Ä–µ–ª –∏ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ universal-install-update.sh

echo "[–í–ù–ò–ú–ê–ù–ò–ï] –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞—Ä–µ–ª!"
echo "[–ò–ù–§–û] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç:"
echo "  ./scripts/universal-install-update.sh"
echo
echo "[–ò–ù–§–û] –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç..."

# –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
exec ./scripts/universal-install-update.sh "$@"

# –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–£–°–¢–ê–†–ï–õ)
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Ubuntu –∏ –¥—Ä—É–≥–∏—Ö Linux –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞—Ö

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[–ò–ù–§–û]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[–£–°–ü–ï–•]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[–í–ù–ò–ú–ê–ù–ò–ï]${NC} $1"
}

print_error() {
    echo -e "${RED}[–û–®–ò–ë–ö–ê]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
check_platform() {
    if [[ "$(uname -s)" != "Linux" ]]; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è Linux (Ubuntu)"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ Ubuntu
    if [[ -f /etc/os-release ]]; then
        source /etc/os-release
        if [[ "$ID" == "ubuntu" ]]; then
            print_status "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Ubuntu $VERSION"
        else
            print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω $PRETTY_NAME. –°–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ Ubuntu"
        fi
    else
        print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
    fi
}

# –ù–∞—Ö–æ–¥–∏–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
find_project_directory() {
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
    
    if [ ! -f "$PROJECT_DIR/requirements.txt" ] && [ ! -f "$PROJECT_DIR/backend/requirements.txt" ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
    
    print_status "–ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
force_update_python_deps() {
    print_status "üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ venv
    VENV_DIR="$PROJECT_DIR/backend/venv"
    if [ ! -f "$VENV_DIR/bin/activate" ]; then
        if [ -f "$PROJECT_DIR/venv/bin/activate" ]; then
            VENV_DIR="$PROJECT_DIR/venv"
            print_status "–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π venv: $VENV_DIR"
        else
            print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            print_status "–°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
            cd "$PROJECT_DIR/backend"
            python3 -m venv venv
            VENV_DIR="$PROJECT_DIR/backend/venv"
        fi
    fi
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    print_status "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    source "$VENV_DIR/bin/activate"
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à pip
    print_status "–û—á–∏—â–∞–µ–º –∫—ç—à pip..."
    pip cache purge 2>/dev/null || true
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip, setuptools –∏ wheel
    print_status "–û–±–Ω–æ–≤–ª—è–µ–º pip, setuptools –∏ wheel..."
    pip install -U pip setuptools wheel
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ö–µ—à —Ñ–∞–π–ª
    REQUIREMENTS_HASH_FILE="$VENV_DIR/.requirements_hash"
    rm -f "$REQUIREMENTS_HASH_FILE"
    
    # –ò—â–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º requirements
    REQ_PRIMARY="$PROJECT_DIR/requirements.txt"
    REQ_SECONDARY="$PROJECT_DIR/backend/requirements.txt"
    DEV_PRIMARY="$PROJECT_DIR/requirements-dev.txt"
    DEV_SECONDARY="$PROJECT_DIR/backend/requirements-dev.txt"
    
    if [ -f "$REQ_PRIMARY" ]; then
        print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ $REQ_PRIMARY..."
        pip install -r "$REQ_PRIMARY" --upgrade --force-reinstall
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ö–µ—à —Ñ–∞–π–ª–∞
        sha256sum "$REQ_PRIMARY" > "$REQUIREMENTS_HASH_FILE" 2>/dev/null || true
    elif [ -f "$REQ_SECONDARY" ]; then
        print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ $REQ_SECONDARY..."
        pip install -r "$REQ_SECONDARY" --upgrade --force-reinstall
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ö–µ—à —Ñ–∞–π–ª–∞
        sha256sum "$REQ_SECONDARY" > "$REQUIREMENTS_HASH_FILE" 2>/dev/null || true
    else
        print_error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ backend/, –Ω–∏ –≤ –∫–æ—Ä–Ω–µ"
        exit 1
    fi
    
    if [ -f "$DEV_PRIMARY" ]; then
        print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ $DEV_PRIMARY..."
        pip install -r "$DEV_PRIMARY" --upgrade --force-reinstall
    elif [ -f "$DEV_SECONDARY" ]; then
        print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ $DEV_SECONDARY..."
        pip install -r "$DEV_SECONDARY" --upgrade --force-reinstall
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–∞–∫–µ—Ç—ã
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–∞–∫–µ—Ç—ã..."
    pip list --outdated 2>/dev/null | head -10 || true
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js
force_update_nodejs_deps() {
    if [ -d "$PROJECT_DIR/frontend" ]; then
        print_status "üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js..."
        cd "$PROJECT_DIR/frontend"
        
        # –û—á–∏—â–∞–µ–º –∫—ç—à npm
        print_status "–û—á–∏—â–∞–µ–º –∫—ç—à npm..."
        npm cache clean --force 2>/dev/null || true
        
        # –£–¥–∞–ª—è–µ–º node_modules –∏ package-lock.json
        print_status "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        rm -rf node_modules package-lock.json 2>/dev/null || true
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ
        print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Node.js..."
        npm install
        
        print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Node.js –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
check_dependencies() {
    print_status "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if [ -f "$VENV_DIR/bin/activate" ]; then
        source "$VENV_DIR/bin/activate"
        print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        pip check 2>/dev/null || print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if [ -d "$PROJECT_DIR/frontend" ]; then
        cd "$PROJECT_DIR/frontend"
        print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        npm audit --audit-level=moderate 2>/dev/null || print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_status "üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π WorkerNet Portal"
    echo
    
    check_platform
    find_project_directory
    
    print_warning "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python –∏ Node.js"
    print_warning "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
    echo
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_status "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
    
    force_update_python_deps
    force_update_nodejs_deps
    check_dependencies
    
    echo
    print_success "üéâ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    print_status "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
